- name: Run setup playbook
  ansible.builtin.import_playbook: setup.yaml
  vars:
    host: aggregator

- name: Run go playbook
  ansible.builtin.import_playbook: go.yaml
  vars:
    host: aggregator

- name: Run eigenlayer-cli playbook
  ansible.builtin.import_playbook: eigenlayer-cli.yaml
  vars:
    host: aggregator

- hosts: aggregator
  vars:
    service: "aggregator"

  tasks:
    - name: Update apt and install required system packages
      become: true
      apt:
        pkg:
          - pkg-config
          - libssl-dev
        state: latest
        update_cache: true
      vars:
        ansible_ssh_user: "{{ admin_user }}"

    - name: Create directories for each service if do not exist
      file:
        path: /home/{{ ansible_user }}/repos/{{ service }}
        state: directory
        mode: '0755'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
      loop:
        - aggregator

    - name: Clone Aligned repository
      git:
        repo: https://github.com/yetanotherco/aligned_layer.git
        dest: /home/{{ ansible_user }}/repos/{{ service }}/aligned_layer
        version: v0.10.2
      loop:
        - aggregator

    - name: Set permissions for cloned repository
      file:
        path: /home/{{ ansible_user }}/repos/{{ service }}/aligned_layer
        mode: '0755'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        recurse: yes

    - name: Build aggregator
      shell: 
        chdir: /home/{{ ansible_user }}/repos/aggregator/aligned_layer/
        cmd: /usr/local/go/bin/go build -o /home/{{ ansible_user }}/repos/aggregator/aligned_layer/build/aligned-aggregator /home/{{ ansible_user }}/repos/aggregator/aligned_layer/aggregator/cmd/main.go

    - name: Create systemd services directory
      file:
        path: "/home/{{ ansible_user }}/.config/systemd/user/"
        state: directory

    - name: Add service to systemd
      template:
        src: services/aggregator.service.j2
        dest: "/home/{{ ansible_user }}/.config/systemd/user/aggregator.service"
        force: no

    - name: Upload config file for aggregator
      template:
        src: config-files/config-aggregator.yaml.j2
        dest: "/home/{{ ansible_user }}/config/config-aggregator.yaml"
      vars:
        aligned_layer_deployment_config_file_path: "{{ lookup('ini', 'aligned_layer_deployment_config_file_path', file='ini/config-aggregator.ini') }}"
        eigen_layer_deployment_config_file_path: "{{ lookup('ini', 'eigen_layer_deployment_config_file_path', file='ini/config-aggregator.ini') }}"
        eth_rpc_url: "{{ lookup('ini', 'eth_rpc_url', file='ini/config-aggregator.ini') }}"
        eth_rpc_url_fallback: "{{ lookup('ini', 'eth_rpc_url_fallback', file='ini/config-aggregator.ini') }}"
        eth_ws_url: "{{ lookup('ini', 'eth_ws_url', file='ini/config-aggregator.ini') }}"
        eth_ws_url_fallback: "{{ lookup('ini', 'eth_ws_url_fallback', file='ini/config-aggregator.ini') }}"
        ecdsa_private_key_store_path: "{{ lookup('ini', 'ecdsa_private_key_store_path', file='ini/config-aggregator.ini') }}"
        ecdsa_private_key_store_password: "{{ lookup('ini', 'ecdsa_private_key_store_password', file='ini/config-aggregator.ini') }}"
        bls_private_key_store_path: "{{ lookup('ini', 'bls_private_key_store_path', file='ini/config-aggregator.ini') }}"
        bls_private_key_store_password: "{{ lookup('ini', 'bls_private_key_store_password', file='ini/config-aggregator.ini') }}"
        bls_public_key_compendium_address: "{{ lookup('ini', 'bls_public_key_compendium_address', file='ini/config-aggregator.ini') }}"
        avs_service_manager_address: "{{ lookup('ini', 'avs_service_manager_address', file='ini/config-aggregator.ini') }}"
        enable_metrics: "{{ lookup('ini', 'enable_metrics', file='ini/config-aggregator.ini') }}"

    - name: Allow access to tcp port 8090
      become: true
      ufw:
        rule: allow
        port: 8090
        proto: tcp
      vars:
        ansible_ssh_user: "{{ admin_user }}"
